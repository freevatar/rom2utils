#!/usr/bin/perl
use Lingua::RU::Antimat;
use pvdlib;
use mysql;
#-----------------------------------------------------------------------------
# –ù–∞—Å—Ç—Ä–æ–π–∫–∞

#–ª–æ–≥–∏–Ω –∫ MySQL
$login = 'root';

#–ø–∞—Ä–æ–ª—å - –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –±—ã–ª –≤—ã–±—Ä–∞–Ω 1
$pass = '1';

$host = 'localhost';


# –ë–∞–∑–∞ –î–∞–Ω–Ω—ã—Ö
$database = 'allods';

$PATH_TO_ALLODS = "";
$PATH_TO_LOGS   = "";

$MIN_LEN_SOOB = 4; #–º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ –Ω–µ –º–∞—Ç–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
$MIN_KOLVO_SOOB = 10;  #< 10 —Å–æ–æ–±—â–µ–Ω–∏–π –æ–¥–Ω–∞ –≥—Ä–∞–¥–∞—Ü–∏—è, > 10 –¥—Ä—É–≥–∞—è –≥—Ä–∞–¥–∞—Ü–∏—è
$MIN_GRAN = 50; # <50% - –Ω–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–µ–π—Ç–∏–Ω–≥–∞ >50% —Ä–µ–π—Ç–∏–Ω–≥ —É—Ö—É–¥—à–∞–µ—Ç—Å—è
$BALL_DO_10 = 1; #–∫–æ–ª-–≤–æ –æ—á–∫–æ–≤, –Ω–∞—á–∏—Å–ª—è–µ–º—ã—Ö –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –±—ã–ª–æ < 10 –∏ –º–Ω–æ–≥–æ –º–∞—Ç–∞
@arrayboard = (-1,15,25,100); #–Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –Ω–∞ -1, –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è –Ω–∞ 100, –≤ –ø–æ—Ä—è–¥–∫–µ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—è
@arrayball = (-1,0,1); #–Ω–∞ 1 —ç–ª–µ–º–µ–Ω—Ç –º–µ–Ω—å—à–µ —á–µ–º –≤ –ø—Ä–µ–¥—ã–¥—É—â–µ–º –º–∞—Å—Å–∏–≤–µ

#$PATH_TO_ALLODS = "C:\\Games\\Allods\\";
#$PATH_TO_LOGS   = "logs\\";
sub path_to_server {return $PATH_TO_ALLODS.$PATH_TO_LOGS."server".shift(@_).".log";}# $num_of_serv - –Ω–æ–º–µ—Ä —Å–µ—Ä–≤–µ—Ä–∞
$first_server = 1; # –ù–æ–º–µ—Ä –ø–µ—Ä–≤–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞
$last_server = 15; # –ù–æ–º–µ—Ä –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞
#-----------------------------------------------------------------------------

$dbh = Mysql->Connect($host, $database, $login, $pass);

$mat=Lingua::RU::Antimat->new; #–í–∫–ª—é—á–∞–µ–º —Å–∏—Å—Ç–µ–º—É –∞–Ω—Ç–∏–º–∞—Ç

sub cur_date { # –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É
 return sprintf("\[%02d.%02d.%04d %02d:%02d:%02d\] ", sub {($_[3], $_[4]+1, $_[5]+1900, $_[2], $_[1], $_[0])}->(localtime));
}
@namearray = ();
@player2login = ();

@cur_pos_svr = (); # –¢–µ–∫—É—â–∏–µ –ø–æ–∑–∏—Ü–∏–∏ –≤ —á–∏—Ç–∞–µ–º—ã—Ö —Ñ–∞–π–ª–∞—Ö server
for ($num_of_serv=$first_server; $num_of_serv <=$last_server; $num_of_serv++)
  {
	# –ó–∞–π–º–µ–º—Å—è —Ñ–∞–π–ª–æ–º –ª–æ–≥–∞ —Å–µ—Ä–≤–µ—Ä–∞
	open(file_srv, path_to_server($num_of_serv)) or (warn cur_date()."Unable to open file \"".path_to_server($num_of_serv)."\": $!"); 
	if  (defined $cur_pos_svr[$num_of_serv]) # –ï—Å–ª–∏ —Å–µ—Ä–≤–µ—Ä —É–∂–µ –æ—Ç–∫—Ä—ã—Ç
	  {
		seek file_srv, 0, 2; # 2 - –∫–æ–Ω–µ—Ü —Ñ–∞–π–ª–∞
		$size_of_file = tell (file_srv);
		if ($cur_pos_svr[$num_of_serv]<=$size_of_file)
		  {
			seek file_srv, $cur_pos_svr[$num_of_serv], 0; # 0 - –Ω–∞—á–∞–ª–æ —Ñ–∞–π–ª–∞
		  }
			# –ï—Å–ª–∏ –≤–¥—Ä—É–≥ –æ–∫–∞–∂–µ—Ç—Å—è, —á—Ç–æ —Ñ–∞–π–ª –º–µ–Ω—å—à–µ–≥–æ —Ä–∞–∑–º–µ—Ä–∞ —á–µ–º —Ç–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –º—ã –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–ª–∏ –≤ –ø—Ä–æ—à–ª—ã–π —Ä–∞–∑ - –æ—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª —Å–Ω–∞—á–∞–ª–∞
		else
		  {
			seek file_srv, 0, 0;
                        undef $line_srv;
		  }
	  }
        else	#–°–µ—Ä–≤–µ—Ä –Ω–µ –æ—Ç–∫—Ä—ã—Ç
	  {
		undef $line_srv;
	  }

	while ($line_srv=<file_srv>)
          {
		if ($line_srv =~ m/(\d{2})\.(\d{2})\.(\d{2}) (\d{2}:\d{2}:\d{2})/)
		  {
			$line_srv_crop = $line_srv;
			$line_srv_crop =~ s/(\d{2})\.(\d{2})\.(\d{2}) (\d{2}:\d{2}:\d{2}) //;

			$time_srv = "$3.$2.$1 $4";		#–∑–∞—á–µ–º –Ω–∞–¥–æ?????
			$normal_time_srv = "$1.$2.20$3 $4";

			if ($line_srv =~ m/New player (.*) has logged in as (\w*)/)
			  {
				$name = $1;
				$login = $2;

				$player2login[$num_of_serv]{"$name"} = $login;
				@namearray = ($name, @namearray);
				$login2player[$num_of_serv]{"$login"} = $name;
				$loginmat[$num_of_serv]{"$login"} = 0;
				$loginall[$num_of_serv]{"$login"} = 0;
				$login_ochki[$num_of_serv]{"$login"} = 0;
			 	$login_otnosh[$num_of_serv]{"$login"} = 0;
			  }
			elsif ($line_srv_crop =~ m/(.*): (.*)/)
			  {
				$name = $1;
				$login = $player2login[$num_of_serv]{"$name"};
				if (defined $login)
				  {     
					$test =encoder($2,"dos","win");
					if ($mat->detect_slang($test))
					  {
						$loginmat[$num_of_serv]{"$login"}++;
						$loginall[$num_of_serv]{"$login"}++;						
					  }
					elsif (length($2)> $MIN_LEN_SOOB)
					  {
						$loginall[$num_of_serv]{"$login"}++;
					  }

				  }
			   }

			elsif ($line_srv =~ m/Player (.*) has left the game/)
			  {
				$name = $1;
				$login = $player2login[$num_of_serv]{"$name"};
				if (defined $login)
				  {     
#					print $loginmat[$num_of_serv]{"$login"};
#					print "/";
#					print $loginall[$num_of_serv]{"$login"};
#					print "   -   ";
#					print $name;
#					print "  =  ";
					
					#–ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –æ—Ç–Ω–æ—à–µ–Ω–∏–µ –º–∞—Ç/–Ω–µ –º–∞—Ç

					if ($loginall[$num_of_serv]{"$login"} != 0)
					  {
	                                        $login_otnosh[$num_of_serv]{"$login"} = int($loginmat[$num_of_serv]{"$login"}/$loginall[$num_of_serv]{"$login"}*100);

					  }
					else
					  {	
						$login_otnosh[$num_of_serv]{"$login"} = 0;
					  };
					#–í—ã—á–∏—Å–ª—è–µ–º —Ä–µ–π—Ç–∏–Ω–≥–∏
					$login_ochki[$num_of_serv]{"$login"} = 0;
					if ($loginall[$num_of_serv]{"$login"} < $MIN_KOLVO_SOOB)
					  {
						if ($login_otnosh[$num_of_serv]{"$login"} > $MIN_GRAN) 
						  {
							$login_ochki[$num_of_serv]{"$login"} = $BALL_DO_10;
						  }
					  }
					else
					  {
						for($i = 0; $i < $#arrayboard; $i++)
						  {
							if (($login_otnosh[$num_of_serv]{"$login"} > @arrayboard[$i]) && ($login_otnosh[$num_of_serv]{"$login"} <= @arrayboard[$i+1]))
							  {
								$login_ochki[$num_of_serv]{"$login"} = @arrayball[$i];
							  }
						  }						
					  }
#					print $login_otnosh[$num_of_serv]{"$login"};	
#					print "   -   ";
#					print $login_ochki[$num_of_serv]{"$login"};
#					print "\n";

					#  –ó–∞–ø—Ä–æ—Å –Ω–∞ –¥–æ–±–∞–ª–µ–Ω–∏–µ –≤ –ë–î

#					print "call InsertDATA(\'".$login."\',".$loginall[$num_of_serv]{"$login"}.",".$loginmat[$num_of_serv]{"$login"}.",".$login_ochki[$num_of_serv]{"$login"}.");";
#					print "\n";
                                        if ($loginall[$num_of_serv]{"$login"} != 0)
					  {
						$sth = $dbh->Query("call InsertDATA(\'".$login."\',".$loginall[$num_of_serv]{"$login"}.",".$loginmat[$num_of_serv]{"$login"}.",".$login_ochki[$num_of_serv]{"$login"}.");") or die $Mysql::db_errstr;
					  }
					delete $player2login[$num_of_serv]{"$name"};
					delete $login2player[$num_of_serv]{"$login"};
				  }
			   }
			elsif ($line_srv =~ m/Player (.*) has disconnected/)
			  {
				$name=$1;
				$login = $player2login[$num_of_serv]{"$name"};
			  }
			elsif ($line_srv =~ m/Player (.*) has joined the game/)
			  {
				$name = $1;
				$login =  $player2login[$num_of_serv]{"$name"};
			  }
		  }
	  }
        $cur_pos_svr[$num_of_serv] = tell (file_srv); # –∑–∞–ø–æ–º–∏–Ω–∞–µ–º —Ç–µ–∫—É—â—É—é –ø–æ–∑–∏—Ü–∏—é
	close file_srv;
	foreach my $element (@namearray) 
	  { # $element Ì‚Æ ·®≠Æ≠®¨
		$name = $element;       # ÆÁ•‡•§≠Æ£Æ Ì´•¨•≠‚† $namearray[$i]
		$login = $player2login[$num_of_serv]{"$name"};
		if (defined $login)
		  {     			
			#–ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –æ—Ç–Ω–æ—à–µ–Ω–∏–µ –º–∞—Ç/–Ω–µ –º–∞—Ç
	
			if ($loginall[$num_of_serv]{"$login"} != 0)
			  {
		        	$login_otnosh[$num_of_serv]{"$login"} = int($loginmat[$num_of_serv]{"$login"}/$loginall[$num_of_serv]{"$login"}*100);
	                  }
			else
			  {	
				$login_otnosh[$num_of_serv]{"$login"} = 0;
			  };
			#–í—ã—á–∏—Å–ª—è–µ–º —Ä–µ–π—Ç–∏–Ω–≥–∏
			$login_ochki[$num_of_serv]{"$login"} = 0;
			if ($loginall[$num_of_serv]{"$login"} < $MIN_KOLVO_SOOB)
			  {
				if ($login_otnosh[$num_of_serv]{"$login"} > $MIN_GRAN) 
				  {
					$login_ochki[$num_of_serv]{"$login"} = $BALL_DO_10;
				  }
			  }
			else
			  {
				for($i = 0; $i < $#arrayboard; $i++)
				  {
					if (($login_otnosh[$num_of_serv]{"$login"} > @arrayboard[$i]) && ($login_otnosh[$num_of_serv]{"$login"} <= @arrayboard[$i+1]))
					  {
						$login_ochki[$num_of_serv]{"$login"} = @arrayball[$i];
					  }
				  }						


			  }
			#  –ó–∞–ø—Ä–æ—Å –Ω–∞ –¥–æ–±–∞–ª–µ–Ω–∏–µ –≤ –ë–î
	                if ($loginall[$num_of_serv]{"$login"} != 0)
			  {
	#			print $login." ".$loginall[$num_of_serv]{"$login"}." ".$loginmat[$num_of_serv]{"$login"}." ".$login_ochki[$num_of_serv]{"$login"}."\n";
				$sth = $dbh->Query("call InsertDATA(\'".$login."\',".$loginall[$num_of_serv]{"$login"}.",".$loginmat[$num_of_serv]{"$login"}.",".$login_ochki[$num_of_serv]{"$login"}.");") or die $Mysql::db_errstr;
			  }
			delete $player2login[$num_of_serv]{"$name"};
			delete $login2player[$num_of_serv]{"$login"};
		  }
	  }
	@namearray=();

  }
